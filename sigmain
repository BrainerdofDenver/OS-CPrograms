//http://www.gnu.org/software/libc/manual/html_node/Sigaction-Function-Example.html

#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <signal.h>
#include <errno.h>
#include <stdlib.h>
#include <stdio.h>

void handler (int signum) {
  if (signum == 01) {printf("\nFirst signal recieved");}
  else if (signum == 10) {printf("\nSecond signal recieved");}
//  else if 
  }


int main( int argc, char *argv[]){
  int                          error_number, status;
  pid_t                        parent_id, child_id;
  struct sigaction     	       action;
  struct sigaction             *s_action = &action;
 
  s_action->sa_handler = handler;
  error_number = sigemptyset (&action.sa_mask);
  if (error_number < 0){
    printf ("\nError in call: sigemptyset");
    perror("sigemptyset");
    exit (EXIT_FAILURE);
    }
  s_action->sa_flags = SA_RESTART;
  
  
  
  return 0;
}
